name: Publish Python Package

on:
  push:
    branches:
      - production 

permissions:
  contents: write

jobs:
  bump-version:
    if: ${{ vars.bump_deploy == 'True' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Git user
        run: |
          git config --global user.email "deploy@sm1ky.com"
          git config --global user.name "Artem"

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bump2version

      - name: Bump version and create tag
        id: bump_version 
        run: |
          bump2version patch --config-file bumpversion.cfg
          git push origin HEAD:production
          git push origin --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get new version from tag
        id: get_tag 
        run: echo "::set-output name=VERSION::$(git describe --tags --abbrev=0)"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag.outputs.VERSION }}
          release_name: "Release ${{ steps.get_tag.outputs.VERSION }}"
          body: "New update to version ${{ steps.get_tag.outputs.VERSION }}"
          draft: false
          prerelease: false
  

  publish:
    if: ${{ vars.publish_deploy == 'True' }}
    runs-on: ubuntu-latest
    needs: bump-version
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Pull latest changes
        run: git pull origin production --tags

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
